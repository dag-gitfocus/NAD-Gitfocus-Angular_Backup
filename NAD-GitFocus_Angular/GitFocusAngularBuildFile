pipeline {
    environment {
    registry = "priya2802/gitfocus_service_kube"
    registryCredential = 'GITFocus-DockerHub'
    dockerImage = ''
  }
   agent any	
   stages {
       stage('Initialize'){
            steps {		    
                    nodejs('DAGNodeJS'){
                          sh 'npm install'
                          sh 'cp  index.d.ts ./node_modules/@types/chart.js'
                    }
            }
        }
        stage('Build') {
            steps {
                    nodejs('DAGNodeJS'){
                        sh 'npm run-script build'
                    }
            }
        }
	stage ("Code Analysis") {	   
            steps {
	            script {
	                      def scannerHome=tool 'DAGSonarQubeScanner'
		              withSonarQubeEnv('SonarQube') {    
	                         sh 'pwd'  
	                         //sh 'cp sonar-scanner.properties /var/jenkins_home/sonar-scanner-4.4.0.2170-linux/conf'
		                 //sh '/var/jenkins_home/sonar-scanner-4.4.0.2170-linux/bin/sonar-scanner'
				 sh "cp sonar-scanner.properties ${scannerHome}/conf"
		                 sh "${scannerHome}/bin/sonar-scanner"
	                      }
		    }
            }
        }
	stage("Quality Check"){
            steps{
	                script{
      			               def qualitygate = waitForQualityGate()
      			               if (qualitygate.status != "OK") {
         		                   error "Pipeline aborted due to quality gate coverage failure: ${qualitygate.status}"
			                     }
	     	          }
            }
        }
	 
	}
    post {
          always {
	          cleanWs() 
		   /*emailext body:'''${DEFAULT_CONTENT}''',
                            recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']],
                            subject:''' ${DEFAULT_SUBJECT}'''*/
         }  
    } 
}
